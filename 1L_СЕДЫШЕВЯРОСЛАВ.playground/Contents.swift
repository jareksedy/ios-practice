// –£—Ä–æ–∫ 1. –ü—Ä–∞–∫—Ç–∏—á–µ—Å–∫–æ–µ –∑–∞–¥–∞–Ω–∏–µ.
// –Ø—Ä–æ—Å–ª–∞–≤ –°–µ–¥—ã—à–µ–≤ <jareksedy@icloud.com>

// 1. –†–µ—à–∏—Ç—å –∫–≤–∞–¥—Ä–∞—Ç–Ω–æ–µ —É—Ä–∞–≤–Ω–µ–Ω–∏–µ.
// –ö–≤–∞–¥—Ä–∞—Ç–Ω–æ–µ —É—Ä–∞–≤–Ω–µ–Ω–∏–µ ‚Äî —ç—Ç–æ —É—Ä–∞–≤–Ω–µ–Ω–∏–µ –≤–∏–¥–∞ ax¬≤ + bx + c = 0,
// –≥–¥–µ –∫–æ—ç—Ñ—Ñ–∏—Ü–∏–µ–Ω—Ç—ã a, b –∏ c ‚Äî –ø—Ä–æ–∏–∑–≤–æ–ª—å–Ω—ã–µ —á–∏—Å–ª–∞, –ø—Ä–∏—á–µ–º a ‚â† 0.

// –ó–∞–¥–∞–¥–∏–º –∑–Ω–∞—á–µ–Ω–∏—è –∫–æ—ç—Ñ—Ñ–∏—Ü–∏–µ–Ω—Ç–æ–≤ a, b –∏ c

let a:Float = -1
let b:Float = -2
let c:Float = 15

print("üßÆ")
print("–†–µ—à–µ–Ω–∏–µ –∫–≤–∞–¥—Ä–∞—Ç–Ω–æ–≥–æ —É—Ä–∞–≤–Ω–µ–Ω–∏—è.")
print("\(a)x¬≤ + \(b)x + \(c) = 0\n")

// –í—ã—á–∏—Å–ª–∏–º –¥–∏—Å–∫—Ä–∏–º–∏–Ω–∞–Ω—Ç

let d:Float = b * b - 4 * a * c

// –û–ø—Ä–µ–¥–µ–ª–∏–º –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –∫–æ—Ä–Ω–µ–π –ø–æ –¥–∏—Å–∫—Ä–∏–º–∏–Ω–∞–Ω—Ç—É
// –ï—Å–ª–∏ D < 0, –∫–æ—Ä–Ω–µ–π –Ω–µ—Ç;
// –ï—Å–ª–∏ D = 0, –µ—Å—Ç—å —Ä–æ–≤–Ω–æ –æ–¥–∏–Ω –∫–æ—Ä–µ–Ω—å;
// –ï—Å–ª–∏ D > 0, –∫–æ—Ä–Ω–µ–π –±—É–¥–µ—Ç –¥–≤–∞.

switch d {
case 1...:
    print("–£—Ä–∞–≤–Ω–µ–Ω–∏–µ –∏–º–µ–µ—Ç –¥–≤–∞ –∫–æ—Ä–Ω—è.")
    let x1 = (-b + d.squareRoot()) / (2 * a)
    let x2 = (-b - d.squareRoot()) / (2 * a)
    print("–ö–æ—Ä–µ–Ω—å x‚ÇÅ = \(x1)")
    print("–ö–æ—Ä–µ–Ω—å x‚ÇÇ = \(x2)")
case 0:
    print("–£—Ä–∞–≤–Ω–µ–Ω–∏–µ –∏–º–µ–µ—Ç –æ–¥–∏–Ω –∫–æ—Ä–µ–Ω—å.")
    let x = (-b + d.squareRoot()) / (2 * a)
    print("–ö–æ—Ä–µ–Ω—å x = \(x)")
case ..<0:
    print("–£—Ä–∞–≤–Ω–µ–Ω–∏–µ –Ω–µ –∏–º–µ–µ—Ç –∫–æ—Ä–Ω–µ–π.")
default:
    fatalError()
}

print("\n")

// 2. –î–∞–Ω—ã –∫–∞—Ç–µ—Ç—ã –ø—Ä—è–º–æ—É–≥–æ–ª—å–Ω–æ–≥–æ —Ç—Ä–µ—É–≥–æ–ª—å–Ω–∏–∫–∞. –ù–∞–π—Ç–∏ –ø–ª–æ—â–∞–¥—å, –ø–µ—Ä–∏–º–µ—Ç—Ä –∏ –≥–∏–ø–æ—Ç–µ–Ω—É–∑—É —Ç—Ä–µ—É–≥–æ–ª—å–Ω–∏–∫–∞.

// –ó–Ω–∞—á–µ–Ω–∏—è –∫–∞—Ç–µ—Ç–æ–≤ —Ç—Ä–µ—É–≥–æ–ª—å–Ω–∏–∫–∞
let leg1:Float = 12
let leg2:Float = 8

print("üìê")
print("–í—ã—á–∏—Å–ª–µ–Ω–∏–µ –ø–ª–æ—â–∞–¥–∏, –≥–∏–ø–æ—Ç–µ–Ω—É–∑—ã –∏ –ø–µ—Ä–∏–º–µ—Ç—Ä–∞ –ø—Ä—è–º–æ—É–≥–æ–ª—å–Ω–æ–≥–æ —Ç—Ä–µ—É–≥–æ–ª—å–Ω–∏–∫–∞ –ø–æ –¥–ª–∏–Ω–µ –∫–∞—Ç–µ—Ç–æ–≤.")
print("–î–ª–∏–Ω–∞ –∫–∞—Ç–µ—Ç–∞ 1 = \(leg1)")
print("–î–ª–∏–Ω–∞ –∫–∞—Ç–µ—Ç–∞ 2 = \(leg2)\n")

// –ü–ª–æ—â–∞–¥—å
let area = leg1 * leg2 / 2

// –ì–∏–ø–æ—Ç–µ–Ω—É–∑–∞
let hypo = ((leg1 * leg1) + (leg2 * leg2)).squareRoot()

// –ü–µ—Ä–∏–º–µ—Ç—Ä
let perimeter = leg1 + leg2 + hypo

print("–ü–ª–æ—â–∞–¥—å = \(area)")
print("–ì–∏–ø–æ—Ç–µ–Ω—É–∑–∞ = \(hypo)")
print("–ü–µ—Ä–∏–º–µ—Ç—Ä = \(perimeter)")

print("\n")

// 3. –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –≤–≤–æ–¥–∏—Ç —Å—É–º–º—É –≤–∫–ª–∞–¥–∞ –≤ –±–∞–Ω–∫ –∏ –≥–æ–¥–æ–≤–æ–π –ø—Ä–æ—Ü–µ–Ω—Ç. –ù–∞–π—Ç–∏ —Å—É–º–º—É –≤–∫–ª–∞–¥–∞ —á–µ—Ä–µ–∑ 5 –ª–µ—Ç.

// –°—É–º–º–∞ –≤–∫–ª–∞–¥–∞ –≤ —Ä—É–±–ª—è—Ö
var amount:Float = 12500

// –°—Ç–∞–≤–∫–∞ –≤–æ–∑–Ω–∞–≥—Ä–∞–∂–¥–µ–Ω–∏—è –≤ % –≥–æ–¥–æ–≤—ã—Ö
let interest:Float = 12.5

// –°—Ä–æ–∫ –≤–∫–ª–∞–¥–∞ (–ª–µ—Ç)
let term:Int = 5

print("üíµ")
print("–í—ã—á–∏—Å–ª–µ–Ω–∏–µ —Å—É–º–º—ã –±–∞–Ω–∫–æ–≤—Å–∫–æ–≥–æ –≤–∫–ª–∞–¥–∞.")
print("–°—É–º–º–∞ –≤–∫–ª–∞–¥–∞: \(amount) ‚ÇΩ")
print("–°—Ç–∞–≤–∫–∞ –≤–æ–∑–Ω–∞–≥—Ä–∞–∂–¥–µ–Ω–∏—è: \(interest) % –≥–æ–¥–æ–≤—ã—Ö.\n")

// –í—ã—á–∏—Å–ª–∏–º —Å—É–º–º—É –≤–∫–ª–∞–¥–∞ —á–µ—Ä–µ–∑ term –ª–µ—Ç
for _ in 1...term {
    amount += amount * interest / 100
}
print("–°—É–º–º–∞ –≤–∫–ª–∞–¥–∞ —á–µ—Ä–µ–∑ \(term) –ª–µ—Ç = \(amount) ‚ÇΩ")




